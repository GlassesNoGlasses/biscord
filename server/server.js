
const express = require('express');
const app = express();
const cors = require('cors');
const multer = require('multer');
const PORT = 8080;
const TEN_MB = 10000000;

const upload = multer({'limits': {'files': 5}});

app.use(express.json());
app.use(cors());
// app.use(express.static('dist'));

app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`)
});


// dummy data
let users = [
    {id: 1, username: 'user1', email: 'user1@gmail.com', description: 'I am gay', friends: [], profilePicture: null},
    {id: 2, username: 'user2', email: 'user2@gmail.com', description: 'I am gay', friends: [], profilePicture: null},
    {id: 3, username: 'user3', email: 'user3@gmail.com', description: 'I am gay', friends: [], profilePicture: null},
]

// dummy helper functions
const getUser = (id) => {
    return users.find(user => user.id == id);
}

// filter string inputs
const filterStringInputs = (input) => {
    // remove whitespace and get first word
    return input.trim().split(' ')[0];
}


// API calls

// get user by id
app.get('/api/getUser/:id', (req, res) => {
    try {
        const id = req.params.id;
        const user = getUser(id);
    
        if (!user) {
            return res.status(404).send({error: 'User not found'});
        }
    
        res.send({data: user});
    } catch (error) {
        return res.send(500).json({ error: error.message });
    }
});

// user login
app.post('/api/login', (req, res) => {
    try {
        const {email, password} = req.body;
        const filteredEmail = filterStringInputs(email);
    
        const user = users.find(user => user.email === filteredEmail);
    
        if (!user) {
            return res.status(404).send({error: 'User not found'});
        }
    
        // TODO: match password with encrypted one in db
        // if (user.password !== password) {
        //     return res.status(401).send('Invalid password');
        // }
    
        res.send({message: `Successfully Logged in as ${filteredEmail}`, data: user});
    } catch (error) {
        return res.send(500).json({ error: error.message });
    }
});

// user signup
app.post('/api/signup', (req, res) => {
    try {
        const {email, password, authCode} = req.body;
        const filteredEmail = filterStringInputs(email);
        const filteredCode = filterStringInputs(authCode);
    
        const user = users.find(user => user.email === filteredEmail);
    
        if (user) {
            return res.status(400).send({error: `An account with email ${filteredEmail} already exists`});
        }
    
        // TODO: validate authCode from db
        // if (filteredCode !== '1234') {... etc.}
    
        users.push({
            id: users.length + 1, // TODO: ID should be generated by db
            email: filteredEmail,
            password: password,
            description: '',
            friends: []
        });
    
        console.log(users[users.length - 1]);
    
        res.send({message: 'User created successfully'});
    } catch (error) {
        return res.status(500).json({ error: error.message });
    }
});

app.put('/api/updateUser/:id', (req, res) => {
    try {
        const id = req.params.id;
        const {username, description} = req.body;
        const filteredUsername = filterStringInputs(username);

        const user = getUser(id);
    
        if (!user) {
            return res.status(404).send({error: 'User not found'});
        }
    
        user.username = username;
        user.description = description;
    
        res.send({message: 'User updated successfully', data: user});
    } catch (error) {
        return res.status(500).json({ error: error.message });
    }
});

app.post('/api/updatePP/:id', upload.single('profile-picture'), (req, res) => {
    try {
        const userID = req.params.id;
        const user = getUser(userID);

        if (!user) {
            return res.status(404).send({error: 'User not found'});
        } 

        const file = req.file;

        if (!file) {
            return res.status(400).send({error: 'Bad request: Invalid File'});
        }

        user.profilePicture = file;
        console.log(user);
        
    } catch (error) {
        return res.status(500).json({ error: error.message });
    }
})

